class Solution
{

public:
  double findMedianSortedArrays (vector < int >&nums1, vector < int >&nums2)
  {

	int m = nums1.size ();

	int n = nums2.size ();

	int i = 0, j = 0;

	  vector < int >ans;

	int count = (m + n) / 2;

	for (int x = 0; x <= count; x++)
	  {

		if (i < m && j < n)
		  {

			if (nums1[i] < nums2[j])
			  {

				ans.push_back (nums1[i]);

				i++;

			  }

			else
			  {

				ans.push_back (nums2[j]);

				j++;

			  }

		  }

		else if (i < m && j >= n)
		  {

			ans.push_back (nums1[i]);

			i++;

		  }

		else if (i >= m && j < n)
		  {

			ans.push_back (nums2[j]);

			j++;

		  }

	  }

	if ((m + n) % 2 == 1)
	  {

		return ans[count];

	  }

	else
	  {

		return ((ans[count] + ans[count - 1]) / 2.0);

	  }

  }

};
